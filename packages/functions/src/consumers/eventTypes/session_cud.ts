/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type SessionCUD = SessionCreated | SessionUpdated;
/**
 * Current possible values are ConnectorLockFailure, EVCommunicationError, GroundFailure, HighTemperature, InternalError, LocalListConflict, NoError, OtherError, OverCurrentFailure, PowerMeterFailure, PowerSwitchFailure, ReaderFailure, ResetFailure, UnderVoltage, OverVoltage, WeakSignal
 */
export type ChargingStationConnectorErrorCode = string;
/**
 * Current possible values are Available, Preparing, Charging, SuspendedEVSE, SuspendedEV, Finishing, Reserved, Unavailable, Faulted
 */
export type ChargingStationStatus = string;

export interface SessionCreated {
  network: string;
  eventType: "SessionCreated";
  data: {
    id: string;
    networkId: string;
    /**
     * Can be one of: INITIALIZED, CONFIRMED, ACTIVE, PROCESSING, SANITY_CHECK, MANUAL_REVIEW, TIMED_OUT and COMPLETE. When a session is created the status is INITIALIZED, unless autoStart is set to true in which case the status is ACTIVE
     */
    status: string;
    chargingStationId: string;
    connectorId: number;
    rateId: string;
    tokenId: string;
    /**
     * date-time format
     */
    startTime: string;
    /**
     * date-time format
     */
    chargingStartTime?: string;
    /**
     * value in Wh
     */
    meterStart: number;
    connectorStatus: {
      errorCode: ChargingStationConnectorErrorCode;
      status: ChargingStationStatus;
      timestamp?: string;
    }[];
    costDetails: SessionCostDetails;
    cost: number;
    autoStart?: boolean;
    deniedBreakdown?: {
      /**
       * Current possible values are TIMED_OUT,STATION_REJECTED
       */
      reason: string;
    };
    createdAt?: string;
    updatedAt?: string;
  };
}
export interface SessionCostDetails {
  costs: {
    energy: number;
    idle: number;
    flat: number;
    time: number;
  };
  usages: {
    energy: number;
    time: number;
    idle: number;
  };
}
export interface SessionUpdated {
  network: string;
  eventType: "SessionUpdated";
  data: {
    id: string;
    networkId: string;
    /**
     * Can be one of: INITIALIZED, CONFIRMED, ACTIVE, PROCESSING, SANITY_CHECK, MANUAL_REVIEW, TIMED_OUT and COMPLETE. When a session is created the status is INITIALIZED, unless autoStart is set to true in which case the status is ACTIVE
     */
    status: string;
    chargingStationId: string;
    connectorId: number;
    rateId: string;
    tokenId: string;
    /**
     * date-time format
     */
    startTime: string;
    /**
     * date-time format
     */
    chargingStartTime?: string;
    /**
     * value in Wh
     */
    meterStart: number;
    /**
     * date-time format
     */
    endTime?: string;
    /**
     * value in Wh
     */
    meterStop?: number;
    /**
     * value in Wh
     */
    detailedMeterStart?: number;
    /**
     * value in Wh
     */
    detailedMeterStop?: number;
    reason?: string;
    connectorStatus: {
      errorCode: ChargingStationConnectorErrorCode;
      status: ChargingStationStatus;
      timestamp?: string;
    }[];
    costDetails: SessionCostDetails;
    cost: number;
    /**
     * Use empty string '' to remove the custom note.
     */
    customNote?: string;
    autoStart?: boolean;
    deniedBreakdown?: {
      /**
       * Current possible values are TIMED_OUT,STATION_REJECTED
       */
      reason: string;
    };
    createdAt?: string;
    updatedAt?: string;
  };
}
